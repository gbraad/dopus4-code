- 040/060/PPC version

It doesn't have much sense (especially PPC version). I an recompile
sources in C but most CPU-demanding parts are in assembler and they should
be recoded for maximum performance under 040/060. I can't do that just
because I don't know m68k ASM. If somebody optimizes them for 040/060 I can
insert them and produce 040/060 version then. PPC version doesn't have any
sense until PPC-native cards appear. If I get PPC-only card with m68k
emulation I'll try to make PPC version and check its performance.

- General speedup

I can't do much in that area because sources are quite messy and
uncommented so any optimizations are hard to do. I can only rely on
optimizations done by compiler.

- Faster dir scanning

Impossible without very deep changes in source tree. Probably never
happens (I think I know why they decided to write DOpus 5 from scratch).

- Faster copying/deleting

Copying is already speeded-up. Currently is almost as fast as in Opus5.
Maybe there's still something to improve but don't expect miracles.
Deleting isn't noticeably slower than in other programs or WB. Best method
of making deleting faster is replacing FFS with another filesystem like PFS
or SFS.

- Gadtools/MUI support for GUI

Forget about MUI. It's too difficult to do. But I'll try to make Gadtools
GUI wherever possible starting from DOpus modules.

- Hiding status bar at the bottom of the window

Can't say now as I haven't checked the sources. It depends on required
changes.

- Font sensitive configuration window

Will be achieved through Gadtools GUI

- Fixing number of items in progress indicator to real value

It will be done. But I'll add special switch to activate it as browsing
directories can take some time (especially on slow disks/FFS partitions).

- Pattern for user-defined gadgets' background

I can add that after fixing more important things.

- Increasing menuitem limit

Is it really required? Actually there can be upto 100 menuitems defined.

- Internal decoding of GIF, PNG, JPG etc.

Won't be done. 3rd party viewers are very good at it. Besides I plan
datatypes support so internal decoders are useless.

- Correct printing on different paper sizes

Tough one. I don't have a printer nor access to US-sized sheets (ie.
Legal). I can try to fix it 'blindly' but it would require strong betatesters support.

- Integration with Scalos desktop

Well, I don't know Scalos nor use it so I don't know what integration could
be done. But looking at the sources I doubt if any integration can be done
easily (if ever).

- Making it DOpus5-like

I won't to that. It's practically impossible and I like typical 2-window
filemanagers. If you need DOpus5 functionality just go and but it!

- WheelMouse support

I'm thinking about it :)

- Warning requester when renaming directory to already existing name

Will be fixed soon

- Rolling backward devicelist when clicked with SHIFT pressed

I've checked the sources and it's not easy to do. Anyway I'll try to add
this feature.

- Option to turn quit-requester off

Will be done

- Selecting the size of copy buffer in Prefs

Currently that buffer is filesize-dependent and it should stay so. Rule
which controls it should be finetuned a bit anyway.

- 'Rename' option to "Overwrite' requester

I'll add that.

- More user commands for filetypes

I think it's possible :)

- Additional commands

Existing set is quite powerful but I don't see any reason why not to expand it
:)

- Using function multiple times in single command (ie. {o})

This is a must!

- Horizontal scroller for text-reader to avoid line wrapping.

It probably won't be done. Use another viewer for that.

- Reducing program size

Compiler does its best. However I'll be removing pre-3.0 code gradually.

- Iconify gadget in window dragbar (VisualPrefs compatible)

I like that idea :)

- Progressbar for deleting files

Why not? :)

- 'Add icon' checkmark for MakeDir requester

I'll do that
