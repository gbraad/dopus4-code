##rem $Id: strings_c.sd,v 1.3 2002/08/20 09:48:04 jrzeuski Exp $
##stringtype C
##shortstrings
/****************************************************************

   This file was created automatically by `%fv'
   from "..%f0".

   Do NOT edit by hand!

****************************************************************/

/*

Directory Opus 4
Original GPL release version 4.12
Copyright 1993-2000 Jonathan Potter

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

All users of Directory Opus 4 distributed under the GPL may be entitled
to upgrade to the latest versions of Directory Opus at a reduced price.
Please see http://www.gpsoft.com.au for more information.

The release of Directory Opus 4 under the GPL in NO WAY affects
the existing commercial status of Directory Opus 5.

*/

#include "dopus.h"

char **globstring;

static const struct DefaultString default_strings[] =
{
	{ %i, %s },
	{ STR_STRING_COUNT, NULL }
};

char str_okaystring[30];
char str_cancelstring[30];

void readstrings(STRPTR file)
{
	stringdata.default_table = default_strings;
	stringdata.string_count = STR_STRING_COUNT;
	stringdata.min_version = %v;

	if(!(IDOpus->ReadStringFile(&stringdata, file)))
		quit();
	globstring = stringdata.string_table;

	strcpy(str_okaystring, globstring[STR_OKAY]);
	strcpy(str_cancelstring, globstring[STR_CANCEL]);
}

int getkeyshortcut(CONST_STRPTR str)
{
	char *c;

	if((c = strchr(str, '_')))
		return tolower(c[1]);
	else
		return 0;
}
