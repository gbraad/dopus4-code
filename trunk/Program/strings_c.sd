##rem $Id: strings_c.sd,v 1.2 2002-07-08 08:13:18 jrzeuski Exp $
##stringtype C
##shortstrings
/****************************************************************

   This file was created automatically by `%fv'
   from "..%f0".

   Do NOT edit by hand!

****************************************************************/

/*

Directory Opus 4
Original GPL release version 4.12
Copyright 1993-2000 Jonathan Potter

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

All users of Directory Opus 4 (including versions distributed
under the GPL) are entitled to upgrade to the latest version of
Directory Opus version 5 at a reduced price. Please see
http://www.gpsoft.com.au for more information.

The release of Directory Opus 4 under the GPL in NO WAY affects
the existing commercial status of Directory Opus 5.

*/

#include "dopus.h"

char **globstring;

static const struct DefaultString
	default_strings[]={
    	{%i,%s},
        {STR_STRING_COUNT,NULL}};

char str_okaystring[30];
char str_cancelstring[30];

void readstrings(file)
char *file;
{
//    int a;
    stringdata.default_table=default_strings;
    stringdata.string_count=STR_STRING_COUNT;
    stringdata.min_version=%v;
//D(bug("readstrings(\%%%s)\\n",file);Delay(50);)

//D(bug("STR_STRING_COUNT=\%%%ld\\n",STR_STRING_COUNT));
//D(for(a=0;a<STR_STRING_COUNT;a++) bug("\%%%ld\\t\%%%s\\n",default_strings[a].string_id,default_strings[a].string));
    if (!(ReadStringFile(&stringdata,file))) quit();
    globstring=stringdata.string_table;
/*
    for (a=0;a<12;a++) {
        date_months[a]=globstring[STR_MONTH_JANUARY+a];
        date_shortmonths[a]=globstring[STR_MONTH_JAN+a];
    }
    date_weekdays[0]=globstring[STR_DAY_SUNDAY];
    date_shortweekdays[0]=globstring[STR_DAY_SUN];
    for (a=1;a<7;a++) {
        date_weekdays[a]=globstring[(STR_DAY_MONDAY-1)+a];
        date_shortweekdays[a]=globstring[(STR_DAY_MON-1)+a];
    }
    for (a=0;a<4;a++) date_special[a]=globstring[STR_DAY_YESTERDAY+a];
*/
    strcpy(str_okaystring,globstring[STR_OKAY]);
    strcpy(str_cancelstring,globstring[STR_CANCEL]);
}

int getkeyshortcut(const char *str)
{
    char *c;

    if (c = strchr(str,'_')) return ToLower(c[1]);
    else return 0;
}

